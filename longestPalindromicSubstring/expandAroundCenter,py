class Solution:
    def longestPalindrome(self, s: str) -> str:
        def expand_from_center(left, right):
            while left >= 0 and right < len(s) and s[left] == s[right]:
                left -= 1
                right += 1
            return right - left - 1

        start, end = 0, 0

        for i in range(len(s)):
            length1 = expand_from_center(i, i)
            if length1 > end - start + 1:
                half = length1 // 2
                start, end = i - half, i + half

            length2 = expand_from_center(i, i + 1)
            if length2 > end - start + 1:
                half = length2 // 2
                start, end = i - half, i + 1 + half

        return s[start:end + 1]
